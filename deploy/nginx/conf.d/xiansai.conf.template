# XiansAi Production Site Configuration Template
# This file will be processed by envsubst to replace environment variables

# Redirect all HTTP traffic to HTTPS
server {
    listen 80;
    server_name ${DOMAIN} www.${DOMAIN} api.${DOMAIN} auth.${DOMAIN} temporal.${DOMAIN};
    
    # Let's Encrypt ACME Challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
    }
    
    # Redirect everything else to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Main XiansAi UI Application
server {
    listen 443 ssl http2;
    server_name ${DOMAIN} www.${DOMAIN};
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss: https:; frame-src 'self';" always;
    
    # Rate Limiting
    limit_req zone=ui burst=20 nodelay;
    
    # Client Settings
    client_max_body_size ${CLIENT_MAX_BODY_SIZE};
    
    # Logging
    access_log /var/log/nginx/xiansai_ui_access.log main;
    error_log /var/log/nginx/xiansai_ui_error.log;
    
    # Main application
    location / {
        proxy_pass http://xiansai-ui:${UI_PORT};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 60s;
        
        # Buffering
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\\n";
        add_header Content-Type text/plain;
    }
    
    # Static assets caching
    location ~* \\.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://xiansai-ui:${UI_PORT};
        proxy_set_header Host $host;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
    }
}

# API Server
server {
    listen 443 ssl http2;
    server_name api.${DOMAIN};
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    
    # Rate Limiting
    limit_req zone=api burst=50 nodelay;
    
    # Client Settings
    client_max_body_size ${CLIENT_MAX_BODY_SIZE};
    
    # Logging
    access_log /var/log/nginx/xiansai_api_access.log main;
    error_log /var/log/nginx/xiansai_api_error.log;
    
    location / {
        proxy_pass http://xiansai-server:${SERVER_PORT};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # API-specific timeouts (longer for AI processing)
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 300s;
        
        # Buffering
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }
    
    # API Health check
    location /health {
        proxy_pass http://xiansai-server:${SERVER_PORT}/health;
        proxy_set_header Host $host;
        access_log off;
    }
}

# Keycloak Authentication Server
server {
    listen 443 ssl http2;
    server_name auth.${DOMAIN};
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    
    # Rate Limiting
    limit_req zone=auth burst=10 nodelay;
    
    # Client Settings
    client_max_body_size 10M;
    
    # Logging
    access_log /var/log/nginx/xiansai_auth_access.log main;
    error_log /var/log/nginx/xiansai_auth_error.log;
    
    location / {
        proxy_pass http://keycloak:${KEYCLOAK_PORT};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Keycloak specific headers
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-Ssl on;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffering (important for Keycloak)
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }
    
    # Keycloak health check
    location /health {
        proxy_pass http://keycloak:${KEYCLOAK_PORT}/health;
        proxy_set_header Host $host;
        access_log off;
    }
}

# Temporal UI (Admin Interface)
server {
    listen 443 ssl http2;
    server_name temporal.${DOMAIN};
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    
    # Rate Limiting
    limit_req zone=general burst=20 nodelay;
    
    # Optional: Restrict access by IP (uncomment and modify as needed)
    # allow 192.168.1.0/24;  # Your office network
    # allow 10.0.0.0/8;      # Private networks
    # deny all;
    
    # Logging
    access_log /var/log/nginx/xiansai_temporal_access.log main;
    error_log /var/log/nginx/xiansai_temporal_error.log;
    
    location / {
        proxy_pass http://temporal-web:${TEMPORAL_PORT};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 60s;
    }
}
